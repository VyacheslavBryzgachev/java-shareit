CREATE TABLE IF NOT EXISTS users
(
    id    int generated by default as identity not null,
    name  varchar(50)                          not null,
    email varchar(50)                          not null,
    constraint pk_user primary key (id),
    constraint user_email unique (email)
);

CREATE TABLE IF NOT EXISTS items
(
    id          int generated by default as identity not null,
    owner_id    int                                  not null,
    name        varchar(50),
    description varchar(200),
    available   boolean,
    request_id  int,
    constraint pk_item primary key (id),
    constraint fk_item foreign key (owner_id) references users (id)
);

CREATE TABLE IF NOT EXISTS bookings
(
    id            int generated by default as identity not null,
    booker_id     int                                  not null,
    item_id       int                                  not null,
    start_booking timestamp with time zone             not null,
    end_booking   timestamp with time zone             not null,
    status        varchar                              not null,
    created_time  timestamp                            not null,
    constraint pk_booking primary key (id),
    constraint fk_booker foreign key (booker_id) references users (id),
    constraint fk_booking_items foreign key (item_id) references items (id)
);

CREATE TABLE if not exists comments
(
    id           int generated by default as identity not null,
    item_id      int                                  not null,
    text         varchar(300)                         not null,
    author_name  varchar(100)                         not null,
    created_time timestamp                            not null,
    constraint pk_comments primary key (id),
    constraint fk_items foreign key (item_id) references items (id)
);

CREATE TABLE if not exists requests
(
    id           int generated by default as identity not null,
    description  varchar(300)                         not null,
    requester    int                                  not null,
    created_time timestamp                            not null,
    item_id      int,
    constraint pk_requests primary key (id),
    constraint fk_requests foreign key (requester) references users (id)
);

INSERT INTO users(name, email)
values ('User1', 'User1@mail.ru'),
       ('User2', 'User2@mail.ru');

INSERT INTO items(owner_id, name, description, available, request_id)
values (1, 'Item1', 'Item1Desc', true, 0),
       (2, 'Item2', 'Item2Desc', false, 1),
       (2, 'Item3', 'Item3Desc', true, 0);

insert into bookings(booker_id, item_id, start_booking, end_booking, status, created_time)
values (1, 1, '2023-11-24T15:35:30', '2023-12-24T15:35:30', 'WAITING', current_timestamp()),
       (2, 1, '2023-11-24T15:35:30', '2023-12-24T15:35:30', 'APPROVED', current_timestamp());

insert into comments(item_id, text, author_name, created_time)
VALUES (1, 'Комментарий', 'Автор', '2023-11-24T15:35:30');

insert into requests(description, requester, created_time, item_id)
VALUES ('Описание1', 1, current_timestamp(), 1),
       ('Описание2', 2, current_timestamp(), 1),
       ('Описание3', 2, current_timestamp(), 2);
